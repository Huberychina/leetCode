### 算法思想

**转换成排序问题**

**算法步骤：**
- 将nums中的各数字转化成字符串格式,保存在int2str中，
- 应用以上自定义排序规则，对int2str中字符串执行排序
- 拼接int2str中的所有字符串

**NOTE：**

我们还需要考虑一种特殊的情况：前导0
例如：输入[0,0],输出因该为 “0” 而不是“00”。

因为字符串数组是自定义降序，我们可以检查排好序的字符串数组的第一个元素是否为0：
- 如果第一个元素为0，说明后续若还有元素，也只能是0了，结果必然是0。
- 如果第一个元素不为0，则不会出现前导0的特殊情况。

---

### 代码

* 

```
class Solution {
public:
    string largestNumber(vector<int>& nums) 
    {
        vector<string> int2str;
        string res;
        for (int i : nums)          // 将数组中每个元素都转换成字符串
            int2str.push_back(to_string(i));
        sort(int2str.begin(), int2str.end(), [](string& a, string& b){return a + b > b + a;});
        if (int2str[0] == "0")  return "0"; // 检查前导0的特殊情况
        for (string s : int2str)    // 将排好序的字符串拼接起来即是结果
            res += s;
        return res;
    }
};
```

---

### 复杂度分析

- 时间复杂度：O（nlogn）
- 空间复杂度：O（n）

